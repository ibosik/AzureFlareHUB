local GameLibrary = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local Network = GameLibrary.Network
local Run_Service = game:GetService("RunService")
local rs = Run_Service.RenderStepped
local check = checklists
local lib = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local Library = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local GameLibrary = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "join coin")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "farm coin")
local CoreGui = game:GetService("StarterGui")
if workspace.__THINGS.__REMOTES:FindFirstChild("buy area") then 
    buyarea = workspace.__THINGS.__REMOTES["buy area"]
end

local ID = {}
local Name = {}
for i,v in pairs(Library.Directory.Pets ) do
    ID[i] = v.name
    Name[v.name] = i
end   

  
local Closestcoin =  425
function BringCoins()
    local Returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i,v in pairs(ListCoins) do
        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.p).Magnitude < Closestcoin then
            local Coin = v
            Coin["index"] = i
            table.insert(Returntable, Coin)
            Closestcoin = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.p).Magnitude
        end
    end
    return Returntable
end


 local firsteggtable = {};
 for i,v in pairs(Library.Directory.Pets) do
  for i,v in pairs(v) do
      if i == "name" then
          table.insert(firsteggtable, v)
      end
  end
end

Eggs = {}
for i,v in pairs(game.ReplicatedStorage.Game.Eggs:GetChildren()) do 
    for i2,SecondEggTable in pairs(v:GetChildren()) do 
        table.insert(Eggs, SecondEggTable.Name)
    end 
end

function FindPlayersPets()
    local returntable = {}
    for i,v in pairs(GameLibrary.Save.Get().Pets) do
        if v.e then 
            table.insert(returntable, v.uid)
        end
    end
    return returntable
 end
 
 spawn(function()
    game.Players.PlayerAdded:Connect(function(newPlayer)
        if newPlayer:IsInGroup(5060810) and getgenv().antiMod then                    
           game.Players.LocalPlayer:Kick("\n Big Games Staff Joined \n!")
        end
     end)
 end)

 getgenv().ListOFRaritys = {
   ['Basic'] = true,
   ['Rare'] = true,
   ['Epic'] = true,
   ['Legendary'] = true,
   ['Mythical'] = true,
   ['Exclusive'] = true,
}




    repeat wait() until game:GetService("Players")
    repeat wait() until game:GetService("Players").LocalPlayer
    repeat wait() until game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Loading"):WaitForChild("Black").BackgroundTransparency == 1
    repeat wait() until game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")


    local ID = {}
    local PetRarity = {}
    for i,v in pairs(Library.Directory.Pets) do
     ID[i] = v.name
     PetRarity[i] = v.rarity
    end
    
    function ThumbNail(id, type)
     local nailname = (type == 'Normal' or type == 'Rainbow' and 'thumbnail') or (type == 'Gold' and 'goldenThumbnail') or (type == 'Dark Matter' and 'darkMatterThumbnail')
     local eeee = Library.Directory.Pets[tostring(id)][nailname] or Library.Directory.Pets[tostring(id)]["thumbnail"] 
     local AssetID = eeee:gsub("rbxassetid%:%/%/", "")
     local Link = "https://www.roblox.com/item-thumbnails?params=[{assetId:"..AssetID.."}]"
	 local Response = game:GetService("HttpService"):JSONDecode(game:HttpGet(Link))
     return Response[1].thumbnailUrl
    end
    
    function Send(Name, Nickname, Strength, Rarity, Thumbnail, Formation, Color, NewPowers, nth)
        local Webhook = getgenv().Webhook
        local msg = {
            ["username"] = "Project Sinister",
            ["Icon"] = "https://media.discordapp.net/attachments/993598696774189058/1016185794454618142/unknown.png",
            ["embeds"] = {
                {
                    ["color"] = tonumber(tostring("0x" .. Color)),
                    ["title"] = "*" .. Rarity .. "* " .. Name,
                    ["thumbnail"] = {
                        ["url"] = Thumbnail
                    },
                    ["fields"] = {
                        {
                            ["name"] = "Nickname",
                            ["value"] = Nickname,
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Formation",
                            ["value"] = Formation,
                            ["inline"] = true
                        },
                        {
                            ["name"] = "Strength",
                            ["value"] = Strength,
                            ["inline"] = true
                        },
                    },
                    ["author"] = {},
                    ['timestamp'] = os.date("%Y-%m-%dT%X.000Z"),
                }
            }
        }
        for qq,bb in pairs(NewPowers) do
            local thingy = {
                ["name"] = "Enchantment "..tostring(qq),
                ["value"] = bb,
                ["inline"] = true
            }
            table.insert(msg["embeds"][1]["fields"], thingy)
        end
        request = http_request or request or HttpPost or syn.request
        request({Url = Webhook, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = game.HttpService:JSONEncode(msg)})
    end
    
    function SendPetToWebhook(uid)
    for i,v in pairs(Library.Save.Get().Pets) do
         if v.uid == uid and getgenv().ListOFRaritys[PetRarity[v.id]] then
             local ThingyThingyTempTypeThing = (v.g and 'Gold') or (v.r and 'Rainbow') or (v.dm and 'Dark Matter') or 'Normal'
             local Formation = (v.g and ':crown: Gold') or (v.r and ':rainbow: Rainbow') or (v.dm and ':milky_way: Dark Matter') or ':roll_of_paper: Normal'
             local Thumbnail = ThumbNail(v.id, ThingyThingyTempTypeThing)
             local Name = ID[v.id]
             local Nickname = v.nk
             local nth = v.idt
             local Strength = v.s
             local Powers = v.powers or {}
             local Rarity = PetRarity[v.id]
             local Color = (Rarity == 'Exclusive' and "e676ff") or (Rarity == 'Mythical' and "ff8c00") or (Rarity == 'Legendary' and "ff45f6") or (Rarity == 'Epic' and "ffea47") or (Rarity == 'Rare' and "42ff5e") or (Rarity == 'Basic' and "b0b0b0")
             local NewPowers = {}
             for a,b in pairs(Powers) do
                 local eeeeeeee = tostring(b[1] .. " " .. b[2])
                 table.insert(NewPowers, eeeeeeee)
             end
             Send(Name, Nickname, Library.Functions.Commas(Strength), Rarity, Thumbnail, Formation, Color, NewPowers, nth)
         end
     end
    end
    
    if getgenv().Connection then getgenv().Connection:Disconnect() end
    getgenv().Connection = game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets.ChildAdded:Connect(function(child)
        if StartWebhookTracking then
        SendPetToWebhook(child.Name)
        end
    end)


    spawn(function()
        while task.wait(.7) do
            if game:GetService("Workspace")["__THINGS"].Orbs:FindFirstChildOfClass("Part") and (getgenv().FarmNearest) then
                local TweenService = game:GetService("TweenService")

                for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
                    if v:IsA("Part") and v:FindFirstChild("Orb") then
                        v.Orb.Sunray:Destroy()
                        TweenService:Create(
                            v,
                            TweenInfo.new(.3, Enum.EasingStyle.Linear),
                            {CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame}
                        ):Play()
                    end
                end
            end
        end
    end)

  spawn(function()
      while game:GetService("RunService").Heartbeat:wait() do
          if getgenv().FarmNearest then
              pcall(function()
  
                  function FarmCoins(CoinID, PetID)
                      game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
                      game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})                
                  end
  
                  function FindPets()
                      local Returntable = {}
                          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
                              if v.ClassName == "TextButton" and v.Equipped.Visible then
                                  table.insert(Returntable, v.Name)
                              end
                          end
                      return Returntable
                  end
  
                  local Closestcoin = tonumber(425)
                  function BringCoins()
                      local Returntable = {}
                
                      local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
                      for i,v in pairs(ListCoins) do
                          if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.p).Magnitude < Closestcoin then
                              local Coin = v
                              Coin["index"] = i
                              table.insert(Returntable, Coin)
                              Closestcoin = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.p).Magnitude
                          end
                      end
                      return Returntable
                  end
  
                  local petthingy = FindPets()
  
                  local cointhiny = BringCoins()
  
                  for i = 1, #cointhiny do
                      coroutine.wrap(function()
                          FarmCoins(cointhiny[i].index, petthingy[i%#petthingy+1])
                      end)()
                  end
              end)
          end
      end
     end)

function GrabPlayersOets()
    local returntable = {}
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets:GetChildren()) do
        if v.ClassName == 'TextButton' and v.Equipped.Visible then
            table.insert(returntable, v.Name)
        end
    end
    return returntable
 end
 
 local FindPlayersPets = GrabPlayersOets()

function FarmCoins4(CoinID, PetID)
    game.workspace["__THINGS"]["__REMOTES"]["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
    game.workspace["__THINGS"]["__REMOTES"]["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
end


spawn(function()
    while task.wait() do
        if getgenv().FarmGems then 
            for i,v in pairs(FindPlayersPets) do
                pcall(function()
                    FarmCoins4(FindGems(), v)
                end)
                 end
        function FindGems()
            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Coins:GetDescendants()) do
                if v:IsA"MeshPart" then
                    if v.MeshId == 'rbxassetid://7041620873' or v.MeshId == 'rbxassetid://7041621431' or v.MeshId == 'rbxassetid://7041621329' or v.MeshId == 'rbxassetid://7041620873' then
                        a = v.Parent.Name
                    end
                end
            end
            return a
        end
    end
end
end)


timetosend = 15

game.Players.PlayerAdded:Connect(function(plr)
    local character = plr.Character or plr.CharacterAdded:Wait()
        end)
       
        local webhookcheck =
        is_sirhurt_closure and "s" or pebc_execute and "p" or syn and "s" or
        secure_load and "s" or
        KRNL_LOADED and "k" or
        SONA_LOADED and "s" or
        "e"
 
     local url = StatWebhook
 
     local data = {
        ["content"] = "",
             ["embeds"] = {{
                 ["title"] = "__**Project Sinister Stat Tracker**__",
                 ["description"] = "Blackouts Watching U...", 
                 ["type"] = "rich",
                 ["color"] = tonumber(0x0E980E),
                },
            }
        
    }
local newdata = game:GetService("HttpService"):JSONEncode(data)

local Network = GameLibrary.Network
local Run_Service = game:GetService("RunService")
local rs = Run_Service.RenderStepped
local CurrencyOrder = {"Rainbow Coins", "Tech Coins", "Fantasy Coins", "Coins", "Diamonds"}

local IMightKillMyselfCauseOfThis = {
            --Misc
            ['VIP'] = {'VIP'};
            --Spawn
            ['Town'] = {'Town', 'Town FRONT'}; ['Forest'] = {'Forest', 'Forest FRONT'}; ['Beach'] = {'Beach', 'Beach FRONT'}; ['Mine'] = {'Mine', 'Mine FRONT'}; ['Winter'] = {'Winter', 'Winter FRONT'}; ['Glacier'] = {'Glacier', 'Glacier Lake'}; ['Desert'] = {'Desert', 'Desert FRONT'}; ['Volcano'] = {'Volcano', 'Volcano FRONT'};
            -- Fantasy init
            ['Enchanted Forest'] = {'Enchanted Forest', 'Enchanted Forest FRONT'}; ['Ancient'] = {'Ancient Island'}; ['Samurai'] = {'Samurai Island', 'Samurai Island FRONT'}; ['Candy'] = {'Candy Island'}; ['Haunted'] = {'Haunted Island', 'Haunted Island FRONT'}; ['Hell'] = {'Hell Island'}; ['Heaven'] = {'Heaven Island'};
            -- Tech
            ['Ice Tech'] = {'Ice Tech'}; ['Tech City'] = {'Tech City'; 'Tech City FRONT'}; ['Dark Tech'] = {'Dark Tech'; 'Dark Tech FRONT'}; ['Steampunk'] = {'Steampunk'; 'Steampunk FRONT'}, ['Alien Forest'] = {"Alien Forest"; "Alien Forest FRONT"}, ['Alien Lab'] = {"Alien Lab"; "Alien Lab FRONT"}, ['Glitch'] = {"Glitch"; "Glitch FRONT"}; ['Hacker Portal'] = {"Hacker Portal", "Hacker Portal FRONT"};
            -- Axolotl
            ['Axolotl Ocean'] = {'Axolotl Ocean', 'Axolotl Ocean FRONT'}; ['Axolotl Deep Ocean'] = {'Axolotl Deep Ocean', 'Axolotl Deep Ocean FRONT'}; ['Axolotl Cave'] = {'Axolotl Cave', 'Axolotl Cave FRONT'};
            -- Minecraft
            ['Pixel Forest'] = {'Pixel Forest', 'Pixel Forest FRONT'}; ['Pixel Kyoto'] = {'Pixel Kyoto', 'Pixel Kyoto FRONT'}; ['Pixel Alps'] = {'Pixel Alps', 'Pixel Alps FRONT'} ; ['Pixel Vault'] = {'Pixel Vault', 'Pixel Vault FRONT'};
        }

        local AreaList = { --These match the IMightKillMyselfCuaseOfThis table
            'VIP';
            'Town'; 'Forest'; 'Beach'; 'Mine'; 'Winter'; 'Glacier'; 'Desert'; 'Volcano';
            'Enchanted Forest'; 'Ancient'; 'Samurai'; 'Candy'; 'Haunted'; 'Hell'; 'Heaven';
            'Ice Tech'; 'Tech City'; 'Dark Tech'; 'Steampunk'; 'Alien Lab'; 'Alien Forest'; 'Glitch'; "Hacker Portal";
            'Axolotl Ocean'; 'Axolotl Deep Ocean'; 'Axolotl Cave';
            'Pixel Forest'; 'Pixel Kyoto'; 'Pixel Alps'; 'Pixel Vault';
        }

        local Chests = {
            -- Spawn
            "Magma Chest",
            -- Fantasy
            "Enchanted Chest", "Hell Chest", "Haunted Chest", "Angel Chest", "Grand Heaven Chest",
            -- Tech
            "Giant Tech Chest"; "Giant Steampunk Chest"; "Giant Alien Chest"; "Giant Hacker Chest";
            -- exolot
           "Giant Ocean Chest";
           -- Minecraft
           "Giant Pixel Chest";
        }


workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "buy egg")
workspace.__THINGS.__REMOTES.MAIN:FireServer("b", "join coin")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "farm coin")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "claim orbs")
workspace.__THINGS.__REMOTES.MAIN:FireServer("a", "change pet target")

--Farms a coin. It seems to work. That's fun
function FarmCoin(CoinID, PetID)
    game.workspace['__THINGS']['__REMOTES']["join coin"]:InvokeServer({[1] = CoinID, [2] = {[1] = PetID}})
    game.workspace['__THINGS']['__REMOTES']["farm coin"]:FireServer({[1] = CoinID, [2] = PetID})
end

function GetMyPets()
   local returntable = {}
   for i,v in pairs(GameLibrary.Save.Get().Pets) do
       if v.e then 
           table.insert(returntable, v.uid)
       end
   end
   return returntable
end

--returns all coins within the given area (area must be a table of conent)
function GetCoins(area)
    local returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i,v in pairs(ListCoins) do
        if MainWindow.flags.FarmingArea == 'All' or table.find(IMightKillMyselfCauseOfThis[MainWindow.flags.FarmingArea], v.a) then
            local shit = v
            shit["index"] = i
            table.insert(returntable, shit)
         end
    end
    return returntable
end

--Sexy man ( wYn#0001 ) made this for me. It works, not sure how, it does.
function GetCoinTable(area)
    local CoinTable = GetCoins(area)
    function getKeysSortedByValue(tbl, sortFunction)
        local keys = {}
        for key in pairs(tbl) do
            table.insert(keys, key)
        end
        table.sort(
            keys,
            function(a, b)
                return sortFunction(tbl[a].h, tbl[b].h)
            end
        )
        return keys
    end
    local sortedKeys = getKeysSortedByValue(CoinTable, function(a, b) return a > b end)
    local newCoinTable = {}

    for i,v in pairs(sortedKeys) do
        table.insert(newCoinTable, CoinTable[v])
    end
    
    return newCoinTable
end

--Not sure exactly why I did this
local AreaWorldTable = {}
for _, v in pairs(game:GetService("ReplicatedStorage").Game.Coins:GetChildren()) do
    for _, b in pairs(v:GetChildren()) do
        table.insert(AreaWorldTable, b.Name)
    end
    table.insert(AreaWorldTable, v.Name)
end

--Returns all the currently alive chests in the game  the same was getcoins does
function AllChests()
    local returntable = {}
    local ListCoins = game.workspace['__THINGS']['__REMOTES']["get coins"]:InvokeServer({})[1]
    for i,v in pairs(ListCoins) do
        local shit = v
        shit.index = i
        for aa,bb in pairs(AreaWorldTable) do
            if string.find(v.n, bb) or  string.find(v.n, "Giant") then
                local thing = string.gsub(v.n, bb.." ", "")
                if table.find(Chests, thing) then
                    shit.n = thing
                    table.insert(returntable, shit)
                end
            end
        end
    end
    return returntable
end

--[[
--the remote works like this. I'm too scared to test anything else out
function CollectOrbs()
    local ohTable1 = {[1] = {}}
    for i,v in pairs(game.workspace['__THINGS'].Orbs:GetChildren()) do
        ohTable1[1][i] = v.Name
    end
    game.workspace['__THINGS']['__REMOTES']["claim orbs"]:FireServer(ohTable1)
end
]]

if _G.MyConnection then _G.MyConnection:Disconnect() end
_G.MyConnection = game.Workspace.__THINGS.Orbs.ChildAdded:Connect(function(Orb)
    game.Workspace.__THINGS.__REMOTES["claim orbs"]:FireServer({{Orb.Name}})
end)

